name: NPM publish CD workflow

on:
  pull_request:
    branches:
      - master
jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 10
          registry-url: https://npm.pkg.github.com
          scope: '@laurieboilard'
      - name: npm publish
        run: |
          LATEST=`npm view . version`
          CURRENT=`cat package.json | jq -r .version`
          if [ "$LATEST" != "$CURRENT" ]
          then
            npm ci
            npm publish
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


# name: NPM publish CD workflow

# on:
#   push:
#     branches:
#       - master
#     # # This specifies that the build will be triggered when we publish a release
#     # types: [published]

# jobs:
#   build:

#     # Run on latest version of ubuntu
#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#       with:
#         # "ref" specifies the branch to check out.
#         # "github.event.release.target_commitish" is a global variable and specifies the branch the release targeted
#         ref: ${{ github.event.release.target_commitish }}
#     # install Node.js
#     - name: Use Node.js 12
#       uses: actions/setup-node@v1
#       with:
#         node-version: 12
#         # Specifies the registry, this field is required!
#         registry-url: https://registry.npmjs.org/
#     # clean install of your projects' deps. We use "npm ci" to avoid package lock changes
#     - run: npm ci
#     # set up git since we will later push to the repo
#     - run: git config --global user.name "laurieboilard"
#     - run: git config --global user.email "lboilard@outlook.com"
#     # publish to NPM -> there is one caveat, continue reading for the fix
#     - run: npm publish
#       env:
#         # Use a token to publish to NPM. See below for how to set it up
#         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#     # push the version changes to GitHub
#     - run: git push
#       env:
#         # The secret is passed automatically. Nothing to configure.
#         github-token: ${{ secrets.GITHUB_TOKEN }}